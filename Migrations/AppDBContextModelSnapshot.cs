// <auto-generated />
using System;
using KloutAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace KloutAPI.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("KloutAPI.Models.Dislike", b =>
                {
                    b.Property<int>("dislike_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("post_id")
                        .HasColumnType("integer");

                    b.Property<string>("user_id")
                        .HasColumnType("text");

                    b.HasKey("dislike_id");

                    b.HasIndex("post_id");

                    b.ToTable("dislikes");
                });

            modelBuilder.Entity("KloutAPI.Models.Follow", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("follower_id")
                        .HasColumnType("text");

                    b.Property<string>("following_id")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.HasIndex("follower_id");

                    b.HasIndex("following_id");

                    b.ToTable("follows");
                });

            modelBuilder.Entity("KloutAPI.Models.Like", b =>
                {
                    b.Property<int>("like_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("post_id")
                        .HasColumnType("integer");

                    b.Property<string>("user_id")
                        .HasColumnType("text");

                    b.HasKey("like_id");

                    b.HasIndex("post_id");

                    b.ToTable("likes");
                });

            modelBuilder.Entity("KloutAPI.Models.Post", b =>
                {
                    b.Property<int>("post_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("comments_count")
                        .HasColumnType("integer");

                    b.Property<DateTime>("created_on")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("dislikes_count")
                        .HasColumnType("integer");

                    b.Property<int>("likes_count")
                        .HasColumnType("integer");

                    b.Property<int>("original_post_id")
                        .HasColumnType("integer");

                    b.Property<string>("post_content")
                        .HasColumnType("text");

                    b.Property<string>("post_img_url")
                        .HasColumnType("text");

                    b.Property<string>("user_id")
                        .HasColumnType("text");

                    b.Property<string>("user_img_url")
                        .HasColumnType("text");

                    b.Property<string>("username")
                        .HasColumnType("text");

                    b.HasKey("post_id");

                    b.HasIndex("user_id");

                    b.ToTable("posts");
                });

            modelBuilder.Entity("KloutAPI.Models.Repost", b =>
                {
                    b.Property<int>("repost_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("post_id")
                        .HasColumnType("integer");

                    b.Property<string>("user_id")
                        .HasColumnType("text");

                    b.HasKey("repost_id");

                    b.ToTable("reposts");
                });

            modelBuilder.Entity("KloutAPI.Models.User", b =>
                {
                    b.Property<string>("user_id")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<int>("follower_count")
                        .HasColumnType("integer");

                    b.Property<int>("following_count")
                        .HasColumnType("integer");

                    b.Property<string>("full_name")
                        .HasColumnType("text");

                    b.Property<string>("phone_number")
                        .HasColumnType("text");

                    b.Property<int>("post_count")
                        .HasColumnType("integer");

                    b.Property<string>("profile_cover_url")
                        .HasColumnType("text");

                    b.Property<string>("profile_img_url")
                        .HasColumnType("text");

                    b.Property<DateTime>("reg_date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("userbio")
                        .HasColumnType("text");

                    b.Property<string>("username")
                        .HasColumnType("text");

                    b.HasKey("user_id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("KloutAPI.Models.Dislike", b =>
                {
                    b.HasOne("KloutAPI.Models.Post", "post")
                        .WithMany()
                        .HasForeignKey("post_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("post");
                });

            modelBuilder.Entity("KloutAPI.Models.Follow", b =>
                {
                    b.HasOne("KloutAPI.Models.User", "follower_user")
                        .WithMany()
                        .HasForeignKey("follower_id");

                    b.HasOne("KloutAPI.Models.User", "following_user")
                        .WithMany()
                        .HasForeignKey("following_id");

                    b.Navigation("follower_user");

                    b.Navigation("following_user");
                });

            modelBuilder.Entity("KloutAPI.Models.Like", b =>
                {
                    b.HasOne("KloutAPI.Models.Post", "post")
                        .WithMany()
                        .HasForeignKey("post_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("post");
                });

            modelBuilder.Entity("KloutAPI.Models.Post", b =>
                {
                    b.HasOne("KloutAPI.Models.User", null)
                        .WithMany("posts")
                        .HasForeignKey("user_id");
                });

            modelBuilder.Entity("KloutAPI.Models.User", b =>
                {
                    b.Navigation("posts");
                });
#pragma warning restore 612, 618
        }
    }
}
